generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model frame_designs {
  id              BigInt            @id @default(autoincrement())
  url             String?           @db.String(255)
  typeId          BigInt?
  createdAt       DateTime          @default(now())
  name            String?           @db.String(255)
  updatedAt       DateTime          @updatedAt
  userId          BigInt?
  frame_types     frame_types?      @relation(fields: [typeId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_frame_designs_type") // Renamed map attribute to ensure uniqueness
  user            user?             @relation(fields: [userId], references: [id], map: "fk_frame_designs_user") // Renamed map attribute to ensure uniqueness
  frame_finalized frame_finalized[] // Updated relation to match renamed field

  @@index([typeId], map: "idx_frame_designs_type") // Renamed index to ensure uniqueness
  @@index([userId], map: "idx_frame_designs_user") // Renamed index to ensure uniqueness
}

model frame_types {
  id            BigInt            @id @default(autoincrement())
  type          String?           @db.String(255)
  frame_designs frame_designs[]
}

model frame_finalized {
  id            BigInt          @id @default(autoincrement())
  url           String          @db.String(255)
  designId      BigInt
  createdAt     DateTime        @default(now())
  name          String?         @db.String(255)
  updatedAt     DateTime        @updatedAt
  userId        BigInt?
  frame_designs frame_designs   @relation(fields: [designId], references: [id], onUpdate: Restrict, map: "fk_frame_finalized_design") // Updated relation field and mapping with unique name
  user          user?           @relation(fields: [userId], references: [id], map: "fk_frame_finalized_user") // Renamed map attribute to ensure uniqueness

  @@index([designId], map: "idx_frame_finalized_design") // Renamed index to ensure uniqueness
  @@index([userId], map: "idx_frame_finalized_user") // Renamed index to ensure uniqueness
}

model user {
  id              BigInt            @id @default(autoincrement())
  userName        String            @unique @db.String(255)
  name            String            @db.String(255)
  email           String            @unique @db.String(255)
  password        String            @db.String(255)
  gender          String?           @db.String(50)
  age             Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  phoneNumber     String?           @db.String(20)
  frame_designs   frame_designs[]
  frame_finalized frame_finalized[]
}
